-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\broadwayIPC_2024b\conv_core_ip_dut.vhd
-- Created: 2025-04-19 14:12:43
-- 
-- Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: conv_core_ip_dut
-- Source Path: conv_core_ip/conv_core_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY conv_core_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        Video_in                          :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        ctrl_hStart                       :   IN    std_logic;  -- ufix1
        ctrl_hEnd                         :   IN    std_logic;  -- ufix1
        ctrl_vStart                       :   IN    std_logic;  -- ufix1
        ctrl_vEnd                         :   IN    std_logic;  -- ufix1
        ctrl_valid                        :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        Video_out                         :   OUT   std_logic_vector(63 DOWNTO 0);  -- ufix64
        valid_out_hStart                  :   OUT   std_logic;  -- ufix1
        valid_out_hEnd                    :   OUT   std_logic;  -- ufix1
        valid_out_vStart                  :   OUT   std_logic;  -- ufix1
        valid_out_vEnd                    :   OUT   std_logic;  -- ufix1
        valid_out_valid                   :   OUT   std_logic  -- ufix1
        );
END conv_core_ip_dut;


ARCHITECTURE rtl OF conv_core_ip_dut IS

  -- Component Declarations
  COMPONENT conv_core_ip_src_conv_core
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          Video_in                        :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
          ctrl_hStart                     :   IN    std_logic;  -- ufix1
          ctrl_hEnd                       :   IN    std_logic;  -- ufix1
          ctrl_vStart                     :   IN    std_logic;  -- ufix1
          ctrl_vEnd                       :   IN    std_logic;  -- ufix1
          ctrl_valid                      :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          Video_out                       :   OUT   std_logic_vector(63 DOWNTO 0);  -- ufix64
          valid_out_hStart                :   OUT   std_logic;  -- ufix1
          valid_out_hEnd                  :   OUT   std_logic;  -- ufix1
          valid_out_vStart                :   OUT   std_logic;  -- ufix1
          valid_out_vEnd                  :   OUT   std_logic;  -- ufix1
          valid_out_valid                 :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : conv_core_ip_src_conv_core
    USE ENTITY work.conv_core_ip_src_conv_core(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL ctrl_hStart_sig                  : std_logic;  -- ufix1
  SIGNAL ctrl_hEnd_sig                    : std_logic;  -- ufix1
  SIGNAL ctrl_vStart_sig                  : std_logic;  -- ufix1
  SIGNAL ctrl_vEnd_sig                    : std_logic;  -- ufix1
  SIGNAL ctrl_valid_sig                   : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL Video_out_sig                    : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL valid_out_hStart_sig             : std_logic;  -- ufix1
  SIGNAL valid_out_hEnd_sig               : std_logic;  -- ufix1
  SIGNAL valid_out_vStart_sig             : std_logic;  -- ufix1
  SIGNAL valid_out_vEnd_sig               : std_logic;  -- ufix1
  SIGNAL valid_out_valid_sig              : std_logic;  -- ufix1

BEGIN
  u_conv_core_ip_src_conv_core : conv_core_ip_src_conv_core
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              Video_in => Video_in,  -- ufix64
              ctrl_hStart => ctrl_hStart_sig,  -- ufix1
              ctrl_hEnd => ctrl_hEnd_sig,  -- ufix1
              ctrl_vStart => ctrl_vStart_sig,  -- ufix1
              ctrl_vEnd => ctrl_vEnd_sig,  -- ufix1
              ctrl_valid => ctrl_valid_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              Video_out => Video_out_sig,  -- ufix64
              valid_out_hStart => valid_out_hStart_sig,  -- ufix1
              valid_out_hEnd => valid_out_hEnd_sig,  -- ufix1
              valid_out_vStart => valid_out_vStart_sig,  -- ufix1
              valid_out_vEnd => valid_out_vEnd_sig,  -- ufix1
              valid_out_valid => valid_out_valid_sig  -- ufix1
              );

  ctrl_hStart_sig <= ctrl_hStart;

  ctrl_hEnd_sig <= ctrl_hEnd;

  ctrl_vStart_sig <= ctrl_vStart;

  ctrl_vEnd_sig <= ctrl_vEnd;

  ctrl_valid_sig <= ctrl_valid;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  Video_out <= Video_out_sig;

  valid_out_hStart <= valid_out_hStart_sig;

  valid_out_hEnd <= valid_out_hEnd_sig;

  valid_out_vStart <= valid_out_vStart_sig;

  valid_out_vEnd <= valid_out_vEnd_sig;

  valid_out_valid <= valid_out_valid_sig;

END rtl;

